{"componentChunkName":"component---src-templates-docs-js","path":"/introduction","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"32c07fa4-7c62-5e2b-95f9-ddf37893dc7b","title":"Introduction to Hypi","slug":"/introduction"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction to Hypi\",\n  \"metaTitle\": \"Introduction to developing apps with Hypi\",\n  \"metaDescription\": \"Introduces the concepts involved in building data driven apps on the Hypi platform\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Before\"), \" getting started with Hypi, it's worth having a general understanding of the concepts involved in working with the platform.\\nThe aim of this introduction is to get you familiar with these concepts.\"), mdx(\"h2\", null, \"Realm\"), mdx(\"p\", null, \"A  \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"realm is a namespace\"), \" for all your apps. This is used in URLs and cannot be changed  once created.\"), mdx(\"h3\", null, \"Organisations\"), mdx(\"p\", null, \"Name of your company/team/group/organisation. You can create as many organisations as you desire. But, there must be at least one organisation in a realm \"), mdx(\"p\", null, \"If your organisation has a Hypi account / realm, please ask your administrator to add you as a member of the team. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Do not register separately; doing so will create an independent realm.\")), mdx(\"h2\", null, \"App\"), mdx(\"p\", null, \"At the heart of everything in Hypi is the idea of an app.\\nHypi uses the concept of an App to encapsulate a collection of models, serverless functions and any resources they need to serve their purpose. \"), mdx(\"p\", null, \"An App can have data models written in GraphQL as well as other serverless functions written in JavaScript, Go, Java, Kotlin, Node.js, PHP, Python, Ruby, Scala & Shell.\\nThink of an app as a way to group related behaviour and resources (there is some similarity to a micro-service).\"), mdx(\"p\", null, \"Within an app, you can further define a few things.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Release\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schema\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dependencies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fields\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Instance\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Instance domain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data (including permission/authorisation)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Monitoring/metrics\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logs\")))), mdx(\"h3\", null, \"Release\"), mdx(\"p\", null, \"A release represents a version of your app. Each release can be used independently.\\nFor example you could create three releases for the same app called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alpha\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rc\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prod-1\"), \".\\nThe alpha release can be used for development, the rc release for release candidates and prod for production.\"), mdx(\"h3\", null, \"Schema\"), mdx(\"p\", null, \"A schema in Hypi is a GraphQL data model which represents the model you want for your app.\\nIn Hypi, everything about your app's API is controlled with the schema.\"), mdx(\"h3\", null, \"Dependencies\"), mdx(\"p\", null, \"Hypi allows an app to add one or more dependencies to other apps.\\nThis feature promotes software reuse by enabling you to build small reusable apps that are added as dependencies in other apps.\"), mdx(\"h3\", null, \"Fields & Settings\"), mdx(\"p\", null, \"Fields in Hypi are key value pairs that allow you to define configuration options that an app needs.\\nOn each release, you define one or more field and later populate values for those fields for each \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#instance\"\n  }), \"instance\"), \" that you create.\\nFields that you create in a release become accessible as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$settings\"), \" variable so \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$settings.fieldName\"), \" gives the value of the field called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fieldName\"), \".\"), mdx(\"h3\", null, \"Instance\"), mdx(\"p\", null, \"An instance is an isolated copy of your app.\\nThink of an app as a template and an instance as a deployed version of that template.\\nEvery instance gets its own \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#instance-domain\"\n  }), \"domain\"), \".\"), mdx(\"h3\", null, \"Instance domain\"), mdx(\"p\", null, \"Every instance must have a unique domain. By default Hypi will generate one based on its domain. You're free to use your own domain e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"api.my-domain.com\"), \".\"), mdx(\"h3\", null, \"Data\"), mdx(\"p\", null, \"Instances are isolated, data created in once instance is not accessible by default from another instance and only someone with permission can grant access between instances.\"), mdx(\"h3\", null, \"Monitoring\"), mdx(\"p\", null, \"Hypi automatically collects some metrics about your API usage. The monitoring page on each instance can be used to see some of the available metrics.\"), mdx(\"h3\", null, \"Logs\"), mdx(\"p\", null, \"Application logs are crucial to debugging issues. Hypi automatically generates \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"some\"), \" logs for your apps.\\nTo make the most of this feature however, your app should capture and submit its log data which you can then browse/search.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#realm","title":"Realm","items":[{"url":"#organisations","title":"Organisations"}]},{"url":"#app","title":"App","items":[{"url":"#release","title":"Release"},{"url":"#schema","title":"Schema"},{"url":"#dependencies","title":"Dependencies"},{"url":"#fields--settings","title":"Fields & Settings"},{"url":"#instance","title":"Instance"},{"url":"#instance-domain","title":"Instance domain"},{"url":"#data","title":"Data"},{"url":"#monitoring","title":"Monitoring"},{"url":"#logs","title":"Logs"}]}]},"parent":{"__typename":"File","relativePath":"introduction.md"},"frontmatter":{"metaTitle":"Introduction to developing apps with Hypi","metaDescription":"Introduces the concepts involved in building data driven apps on the Hypi platform"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/FAQs","title":"FAQs"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction to Hypi"}}},{"node":{"fields":{"slug":"/","title":"Hypi Platform Documentation"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/registration-and-login","title":"Registration & Login"}}},{"node":{"fields":{"slug":"/tutorials/creating-apps","title":"Creating an app"}}},{"node":{"fields":{"slug":"/reference/instance","title":"Instances"}}},{"node":{"fields":{"slug":"/reference/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/reference/arcql","title":"ArcQL Filtering"}}},{"node":{"fields":{"slug":"/reference/authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference/graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/reference/realtime","title":"Realtime"}}},{"node":{"fields":{"slug":"/recipes/login","title":"Logging into a Hypi app"}}},{"node":{"fields":{"slug":"/recipes/create-account","title":"Create an account"}}},{"node":{"fields":{"slug":"/recipes/build-todo-app","title":"Build a todo app"}}},{"node":{"fields":{"slug":"/reference/instance/crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/reference/instance/custom-functions","title":"Custom Functions"}}},{"node":{"fields":{"slug":"/reference/instance/monitoring","title":"Logs"}}},{"node":{"fields":{"slug":"/reference/instance/logs","title":"Monitoring"}}},{"node":{"fields":{"slug":"/reference/authorisation/permissions","title":"Permissions"}}},{"node":{"fields":{"slug":"/reference/authorisation/policies","title":"Policies"}}},{"node":{"fields":{"slug":"/reference/graphql/intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/graphql/query","title":"Queries"}}},{"node":{"fields":{"slug":"/reference/graphql/mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/reference/graphql/subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/reference/graphql/hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/reference/graphql/directives","title":"Directives"}}},{"node":{"fields":{"slug":"/reference/graphql/interfaces","title":"Interfaces"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"32c07fa4-7c62-5e2b-95f9-ddf37893dc7b"}}}