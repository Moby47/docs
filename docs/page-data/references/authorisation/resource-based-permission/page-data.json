{"componentChunkName":"component---src-templates-docs-js","path":"/references/authorisation/resource-based-permission","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"cb3e5626-99ee-5f36-b12b-cc681eb93ccb","title":"Resource Permission","slug":"/references/03-authorisation/02-resource-based-permission"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Resource Permission\",\n  \"metaTitle\": \"Hypi Platform Resource Based Permission Documentation\",\n  \"metaDescription\": \"Hypi platform documentation for resource based permission\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"Resource based permission allows protecting a specific resource by ID. The owner of the resource can give permission for other users to access the resource and also can give permission for other users to modify permissions of the resource. All the permission and policy relation objects are part of the core app, so the schema is already defined there.\"), mdx(\"h2\", null, \"Examples\"), mdx(\"p\", null, \"For the examples below we will need some data. Add these entries to be able to get the results shown in the example.\"), mdx(\"h3\", null, \"Creating a Resource Based Permission\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Creating a RBP with a role policy\")), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#GraphQL query\\nmutation Upsert($values: HypiUpsertInputUnion!) {\\n  upsert(values: $values) {\\n    release\\n    instanceUse a\\n    publisherRelease\\n    id\\n    created\\n    app\\n    impl\\n    updated\\n    publisherRealm\\n    trashed\\n    publisherApp\\n    instanceId\\n    __typename\\n}\\n#Data\\n{\\n  \\\"values\\\": {\\n    \\\"ResourceBasedPermission\\\": [\\n        {\\n          \\\"hypi\\\"                : {\\\"id\\\": \\\"rbp2\\\"},\\n          \\\"name\\\"                : \\\"rbp2\\\",\\n          \\\"decisionStrategy\\\"    : \\\"Unanimous\\\",\\n          \\\"type\\\"                : \\\"URL\\\",\\n          \\\"resource\\\"            : \\\"url123\\\",\\n          \\\"policies\\\"            : [\\n            {\\n              \\\"hypi\\\"  : {\\\"impl\\\": \\\"RolePolicy\\\", \\\"id\\\": \\\"rp1\\\"},\\n              \\\"name\\\"  : \\\"rp 1\\\",\\n              \\\"logic\\\" : \\\"Positive\\\",\\n              \\\"roles\\\" : [\\n                {\\n                  \\\"hypi\\\"     : {\\\"id\\\": \\\"r1\\\"},\\n                  \\\"name\\\"     : \\\"role 1\\\",\\n                  \\\"accounts\\\" : [\\n                    {\\\"hypi\\\": {\\\"id\\\": \\\"accountId\\\"}}\\n                  ]\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n  }\\n}\\n\"))), mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"upsert\\\": [\\n      {\\n        \\\"release\\\": \\\"latest\\\",\\n        \\\"instance\\\": \\\"hypi\\\",\\n        \\\"publisherRelease\\\": \\\"latest\\\",\\n        \\\"id\\\": \\\"rbp2\\\",\\n        \\\"created\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"app\\\": \\\"store\\\",\\n        \\\"impl\\\": null,\\n        \\\"updated\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"publisherRealm\\\": \\\"hypi\\\",\\n        \\\"trashed\\\": null,\\n        \\\"publisherApp\\\": \\\"core\\\",\\n        \\\"instanceId\\\": \\\"01E8TQXPF01QR7QYFZA038DM2P\\\",\\n        \\\"__typename\\\": \\\"Hypi\\\"\\n      }\\n    ]\\n  }\\n}\\n\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Creating a RBP with a group policy\")), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#GraphQL query\\nmutation Upsert($values: HypiUpsertInputUnion!) {\\n  upsert(values: $values) {\\n    release\\n    instance\\n    publisherRelease\\n    id\\n    created\\n    app\\n    impl\\n    updated\\n    publisherRealm\\n    trashed\\n    publisherApp\\n    instanceId\\n    __typename\\n}\\n#Data\\n{\\n  \\\"values\\\": {\\n    \\\"ResourceBasedPermission\\\": [\\n        {\\n          \\\"hypi\\\"             : {\\\"id\\\": \\\"rbp2\\\"},\\n          \\\"name\\\"             : \\\"rbp2\\\",\\n          \\\"decisionStrategy\\\" : \\\"Unanimous\\\",\\n          \\\"type\\\"             : \\\"URL\\\",\\n          \\\"resource\\\"         : \\\"url123\\\",\\n          \\\"policies\\\"         : [\\n            {\\n              \\\"hypi\\\"   : {\\\"impl\\\": \\\"GroupPolicy\\\", \\\"id\\\": \\\"gp1\\\"},\\n              \\\"name\\\"   : \\\"gp 1\\\",\\n              \\\"logic\\\"  : \\\"Positive\\\",\\n              \\\"groups\\\" : [\\n                {\\n                  \\\"hypi\\\"     : {\\\"id\\\": \\\"g1\\\"},\\n                  \\\"name\\\"     : \\\"group 1\\\",\\n                  \\\"accounts\\\" : [\\n                    {\\\"hypi\\\": {\\\"id\\\": \\\"accountId\\\"}}\\n                  ]\\n                }\\n              ],\\n              \\\"organisations\\\": [\\n                {\\n                  \\\"hypi\\\"    : {\\\"id\\\": \\\"o1\\\"},\\n                  \\\"name\\\"    : \\\"Org 1\\\",\\n                  \\\"members\\\" : [\\n                    {\\\"hypi\\\": {\\\"id\\\": \\\"accountId\\\"}}\\n                  ]\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n  }\\n}\\n\"))), mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"upsert\\\": [\\n      {\\n        \\\"release\\\": \\\"latest\\\",\\n        \\\"instance\\\": \\\"hypi\\\",\\n        \\\"publisherRelease\\\": \\\"latest\\\",\\n        \\\"id\\\": \\\"rbp2\\\",\\n        \\\"created\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"app\\\": \\\"store\\\",\\n        \\\"impl\\\": null,\\n        \\\"updated\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"publisherRealm\\\": \\\"hypi\\\",\\n        \\\"trashed\\\": null,\\n        \\\"publisherApp\\\": \\\"core\\\",\\n        \\\"instanceId\\\": \\\"01E8TQXPF01QR7QYFZA038DM2P\\\",\\n        \\\"__typename\\\": \\\"Hypi\\\"\\n      }\\n    ]\\n  }\\n}\\n\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Creating a RBP with a role policy\")), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#GraphQL query\\nmutation Upsert($values: HypiUpsertInputUnion!) {\\n  upsert(values: $values) {\\n    release\\n    instance\\n    publisherRelease\\n    id\\n    created\\n    app\\n    impl\\n    updated\\n    publisherRealm\\n    trashed\\n    publisherApp\\n    instanceId\\n    __typename\\n}\\n#Data\\n{\\n  \\\"values\\\": {\\n    \\\"ResourceBasedPermission\\\": [\\n        {\\n          \\\"hypi\\\"             : {\\\"id\\\": \\\"rbp2\\\"},\\n          \\\"name\\\"             : \\\"rbp2\\\",\\n          \\\"decisionStrategy\\\" : \\\"Unanimous\\\",\\n          \\\"type\\\"             : \\\"URL\\\",\\n          \\\"resource\\\"         : \\\"url123\\\",\\n          \\\"policies\\\"         : [\\n            {\\n              \\\"hypi\\\"   : {\\\"impl\\\": \\\"RealmPolicy\\\", \\\"id\\\": \\\"rp2\\\"},\\n              \\\"name\\\"   : \\\"rp 2\\\",\\n              \\\"logic\\\"  : \\\"Positive\\\",\\n              \\\"realms\\\" : [\\n                {\\n                  \\\"hypi\\\"     : {\\\"id\\\": \\\"rl1\\\"},\\n                  \\\"name\\\"     : \\\"hypi\\\",\\n                  \\\"accounts\\\" : [\\n                    {\\n                      \\\"hypi\\\"    : {\\\"id\\\": \\\"example.user1\\\"},\\n                      \\\"username\\\": \\\"user1\\\",\\n                      \\\"password\\\": {\\\"value\\\": \\\"pass1\\\"},\\n                      \\\"emails\\\"  : [{\\\"value\\\": \\\"user1@hypi.io\\\"}],\\n                      \\\"owner\\\"   : {\\\"names\\\": [\\n                        {\\\"firstName\\\": \\\"Something\\\"}\\n                      ]\\n                      }\\n                    }\\n                  ]\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n  }\\n}\\n\"))), mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"upsert\\\": [\\n      {\\n        \\\"release\\\": \\\"latest\\\",\\n        \\\"instance\\\": \\\"hypi\\\",\\n        \\\"publisherRelease\\\": \\\"latest\\\",\\n        \\\"id\\\": \\\"rbp2\\\",\\n        \\\"created\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"app\\\": \\\"store\\\",\\n        \\\"impl\\\": null,\\n        \\\"updated\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"publisherRealm\\\": \\\"hypi\\\",\\n        \\\"trashed\\\": null,\\n        \\\"publisherApp\\\": \\\"core\\\",\\n        \\\"instanceId\\\": \\\"01E8TQXPF01QR7QYFZA038DM2P\\\",\\n        \\\"__typename\\\": \\\"Hypi\\\"\\n      }\\n    ]\\n  }\\n}\\n\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Creating a RBP with a time policy\")), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#GraphQL query\\nmutation Upsert($values: HypiUpsertInputUnion!) {\\n  upsert(values: $values) {\\n    release\\n    instance\\n    publisherRelease\\n    id\\n    created\\n    app\\n    impl\\n    updated\\n    publisherRealm\\n    trashed\\n    publisherApp\\n    instanceId\\n    __typename\\n}\\n#Data\\n{\\n  \\\"values\\\": {\\n    \\\"ResourceBasedPermission\\\": [\\n        {\\n          \\\"hypi\\\"             : {\\\"id\\\": \\\"rbp2\\\"},\\n          \\\"name\\\"             : \\\"rbp2\\\",\\n          \\\"decisionStrategy\\\" : \\\"Unanimous\\\",\\n          \\\"type\\\"             : \\\"URL\\\",\\n          \\\"resource\\\"         : \\\"url123\\\",\\n          \\\"policies\\\"         : [\\n            {\\n              \\\"hypi\\\"    : {\\\"impl\\\": \\\"TimePolicy\\\", \\\"id\\\": \\\"tp1\\\"},\\n              \\\"name\\\"    : \\\"time policy 1\\\",\\n              \\\"from\\\"    : \\\"2020-04-03 11:13:34\\\",\\n              \\\"to\\\"      : \\\"2021-04-03 11:13:34\\\",\\n              \\\"logic\\\"   : \\\"Positive\\\",\\n              \\\"groups\\\"  : [\\n                {\\n                  \\\"hypi\\\"     : {\\\"id\\\": \\\"g1\\\"},\\n                  \\\"name\\\"     : \\\"group 1\\\",\\n                  \\\"accounts\\\" : [\\n                    {\\\"hypi\\\": {\\\"id\\\": \\\"accountId\\\"}}\\n                  ]\\n                }\\n              ],\\n              \\\"roles\\\": [\\n                {\\n                  \\\"hypi\\\"     : {\\\"id\\\": \\\"r1\\\"},\\n                  \\\"name\\\"     : \\\"role 1\\\",\\n                  \\\"accounts\\\" : [\\n                    {\\\"hypi\\\": {\\\"id\\\": \\\"accId2\\\"}}\\n                  ]\\n                }\\n              ],\\n              \\\"accounts\\\": [\\n                {\\\"hypi\\\": {\\\"id\\\": \\\"accId3\\\"}}\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n  }\\n}\\n\"))), mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"upsert\\\": [\\n      {\\n        \\\"release\\\": \\\"latest\\\",\\n        \\\"instance\\\": \\\"hypi\\\",\\n        \\\"publisherRelease\\\": \\\"latest\\\",\\n        \\\"id\\\": \\\"rbp2\\\",\\n        \\\"created\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"app\\\": \\\"store\\\",\\n        \\\"impl\\\": null,\\n        \\\"updated\\\": \\\"2020-08-03T10:01:06Z\\\",\\n        \\\"publisherRealm\\\": \\\"hypi\\\",\\n        \\\"trashed\\\": null,\\n        \\\"publisherApp\\\": \\\"core\\\",\\n        \\\"instanceId\\\": \\\"01E8TQXPF01QR7QYFZA038DM2P\\\",\\n        \\\"__typename\\\": \\\"Hypi\\\"\\n      }\\n    ]\\n  }\\n}\\n\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#examples","title":"Examples","items":[{"url":"#creating-a-resource-based-permission","title":"Creating a Resource Based Permission"}]}]},"parent":{"__typename":"File","relativePath":"references/03-authorisation/02-resource-based-permission.md"},"frontmatter":{"metaTitle":"Hypi Platform Resource Based Permission Documentation","metaDescription":"Hypi platform documentation for resource based permission"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/products","title":"Products"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/04-dateGranularity","title":"Timeseries Aggregations with Date Granularity"}}},{"node":{"fields":{"slug":"/faq","title":"FAQs"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/references","title":"API & References"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/","title":"Platform Documentation"}}},{"node":{"fields":{"slug":"/tutorials/01-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/tutorials/02-arcql","title":"ArcQL Filtering"}}},{"node":{"fields":{"slug":"/tutorials/03-crud","title":"Hypi GraphQL CRUD Tutorial"}}},{"node":{"fields":{"slug":"/tutorials/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/references/00-app","title":"Apps"}}},{"node":{"fields":{"slug":"/references/02-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/references/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/references/04-api-gateway","title":"API Gateway"}}},{"node":{"fields":{"slug":"/references/01-api","title":"API Setup"}}},{"node":{"fields":{"slug":"/references/06-rest-api","title":"RESTful APIs"}}},{"node":{"fields":{"slug":"/references/05-aggregations-api","title":"Aggregations API"}}},{"node":{"fields":{"slug":"/references/07-workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/references/08-webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/references/09-math-api","title":"Math API"}}},{"node":{"fields":{"slug":"/references/10-triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/references/11-serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/references/13-analytics","title":"Analytics"}}},{"node":{"fields":{"slug":"/references/14-iot","title":"IoT"}}},{"node":{"fields":{"slug":"/references/12-user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/03-query","title":"Queries"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/04-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/05-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/02-schema-and-types","title":"Schema & Types"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/06-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/07-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/tutorials/00-graphql/08-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/references/03-authorisation/02-resource-based-permission","title":"Resource Permission"}}},{"node":{"fields":{"slug":"/references/03-authorisation/00-permissions","title":"Permissions"}}},{"node":{"fields":{"slug":"/references/03-authorisation/01-policies","title":"Policies"}}},{"node":{"fields":{"slug":"/getting-started/02-angular","title":"Hypi + Angular"}}},{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/getting-started/01-scratch","title":"Starting from scratch"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"cb3e5626-99ee-5f36-b12b-cc681eb93ccb"}}}