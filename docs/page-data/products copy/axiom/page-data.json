{"componentChunkName":"component---src-templates-docs-js","path":"/products copy/axiom","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"88b97edd-3989-5e92-97c4-c80070748490","title":"Axiom","slug":"/products copy/axiom"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Axiom\",\n  \"metaTitle\": \"Hypi Platform Documentation for Axiom\",\n  \"metaDescription\": \"Hypi platform documentation core features of the Hypi\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Overview\"), mdx(\"p\", null, \"Hypi's flagship product tries to include the features most modern applications need to get going quickly.\"), mdx(\"p\", null, \"To use Axiom, add the \\\"core\\\" app as a dependency when creating a release for your app.\\nThe UI automatically does this.\"), mdx(\"p\", null, \"The features Axiom includes cover the following:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#crud\"\n  }), \"CRUD\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#appdependencies\"\n  }), \"App dependencies\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#environmentvariables\"\n  }), \"Environment variables\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#workflows\"\n  }), \"Workflows\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#webhooks\"\n  }), \"Webhooks\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#triggers\"\n  }), \"Triggers\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#userdefinedfunctions\"\n  }), \"User defined functions\"), \" i.e. UDF\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#serverlessfunctions\"\n  }), \"Serverless functions\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#permissionandauthorisationpolicies\"\n  }), \"Permission & Authorisation policies\"))), mdx(\"h1\", null, \"CRUD\"), mdx(\"p\", null, \"CRUD is the acronym commonly used for Create, Read, Update and Delete.\\nWith Hypi's Axiom, a CRUD API is automatically generated from your app's schema, enabling you to start working with your app's API as soon as you click save!\"), mdx(\"p\", null, \"It goes a little further by including the ability to \\\"trash\\\" data i.e. perform a soft delete where the data will not be returned unless explicitly requested but hasn't been deleted from the database.\\nYou can later untrash or permanently delete the data.\\nSee the detailed CRUD documentation for more information.\"), mdx(\"h1\", null, \"App dependencies\"), mdx(\"p\", null, \"Hypi tries to promote the DRY principle and general separatation of concerns by providing you with the ability to split an app into smaller re-usable parts.\\nIn doing so, a single app's schema and other code can be simpler to maintain and manage.\\nThis is achieved by providing the ability for any app to be used as a dependency of another app.\\nImagine creating an app like Twitter. You could break this into multiple smaller apps.\\ne.g. one for timeline, one for searches, one for media lookup (where the image/video of a link is fetched and embedded in a Tweet).\"), mdx(\"p\", null, \"How you choose to break your app down into modular parts is up to you, Hypi provides the facilities that make it possible and then gets out of the way...that also means you don't have to.\"), mdx(\"h1\", null, \"Environment variables\"), mdx(\"p\", null, \"Many applications require settings at run time which change depending on some criteria specific to the app or its users/environment.\\nWhen you create a release, Hypi let's you define one or more fields which can be populated when an instance of the app is created.\\nThese become accessible at runtime.\"), mdx(\"h1\", null, \"Workflows\"), mdx(\"p\", null, \"Workflows are a way of letting your app orchestrate the execution of multiple functions in response to a single event.\\nImagine you were building a web app for a completely automated Pizza service.\\nWhen a user places an order for a Pizza, you want to do a few things:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Accept the order\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Start the oven\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Put the ingredients in the oven\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Package the prepared pizza\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hand the Pizza over to the delivery driver\")), mdx(\"p\", null, \"You could write one function which dispatches all of these one at a time.\\nThis case is simple enough.\\nWhat happens if you need to parallelise some parts of this?\\nOr execute some parts synchronously but others asynchronously?\"), mdx(\"p\", null, \"The code will become more and more complex. Instead of taking on this complexity, you could use Hypi's workflows.\"), mdx(\"p\", null, \"A workflow let's you define the order of execution of one or more functions as well as provide facilities for parallel execution of some functions and scheduling some to be executed later.\\nIt also let's you conditionally execute any step of the workflow and much more.\"), mdx(\"h1\", null, \"Webhooks\"), mdx(\"p\", null, \"Many cloud services provide a mechanism for letting you know when certain events have occurred in their system.\\nOne of those mechanisms is called a Webhook. This is where the service will let you specify a URL that they will send a HTTP request to.\"), mdx(\"p\", null, \"Hypi's Webhooks lets you define URLs which can be called by external services.\\nIn response, you can call a user defined function, a serverless function, execute triggers and more.\"), mdx(\"h1\", null, \"Triggers\"), mdx(\"p\", null, \"Hypi triggers are a mechanism for automatically executing a function before or after another function.\\nIf you're familiar with triggers in databases, it's the same concept.\"), mdx(\"p\", null, \"Let's say you have an app which defined a function called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"startProcess\"), \" and you depend on another app which has a function called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"afterProcessStarted\"), \".\\nYou can use a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@trigger\"), \" to execute the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"afterProcessStarted\"), \" function when \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"startProcess\"), \" is called.\\nThe function used can be defined anywhere, either in the current app or in a dependency.\"), mdx(\"h1\", null, \"User defined functions\"), mdx(\"p\", null, \"User defined functions, UDF are a lightweight way of executing custom code in the Hypi platform.\\nThey are considered lightweight compared to serverless functions because they are evaluated on the same server where the calling code is executed.\\nCurrently two languages are supported for UDFs:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Groovy\"), \" - the entire Groovy syntax is available making it quick, easy and performant to add custom behaviour to your app.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Velocity\"), \" - the velocity template language is used in places where you want to output text which executes some dynamic behaviour. For example, you could use this to customise the body of an email, using velocity templating to substitute the receiver's name from a variable etc.\")), mdx(\"h1\", null, \"Serverless functions\"), mdx(\"p\", null, \"Serverless functions are a modern approach to application development.\\nJust as all the features in Hypi described so far allows you to get work done without worrying about things like servers or execution environment, so too do serverless functions.\\nServerless functions in Hypi let's you write any custom code you want, wrap it in a Docker container and then use it in your Hypi app as if it was defined by the Hypi platform itself.\"), mdx(\"h1\", null, \"Permission and Authorisation policies\"), mdx(\"p\", null, \"Many applications require their users to have certain permissions before they can perform a given action.\\nHypi has built in support for extensive permission and authorisation control.\\nYou can define a Type, Scope or Resource based permission which use different autorisation policies to control who can do perform an action...or when.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#crud","title":"CRUD"},{"url":"#app-dependencies","title":"App dependencies"},{"url":"#environment-variables","title":"Environment variables"},{"url":"#workflows","title":"Workflows"},{"url":"#webhooks","title":"Webhooks"},{"url":"#triggers","title":"Triggers"},{"url":"#user-defined-functions","title":"User defined functions"},{"url":"#serverless-functions","title":"Serverless functions"},{"url":"#permission-and-authorisation-policies","title":"Permission and Authorisation policies"}]},"parent":{"__typename":"File","relativePath":"products copy/00-axiom.md"},"frontmatter":{"metaTitle":"Hypi Platform Documentation for Axiom","metaDescription":"Hypi platform documentation core features of the Hypi"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/tutorials/registration-and-login","title":"Registration & Login"}}},{"node":{"fields":{"slug":"/tutorials/creating-apps","title":"Creating an app"}}},{"node":{"fields":{"slug":"/recipes/login","title":"Logging into a Hypi app"}}},{"node":{"fields":{"slug":"/recipes/build-todo-app","title":"Build a todo app"}}},{"node":{"fields":{"slug":"/recipes/create-account","title":"Create an account"}}},{"node":{"fields":{"slug":"/FAQs","title":"FAQs"}}},{"node":{"fields":{"slug":"/","title":"Hypi Platform Documentation"}}},{"node":{"fields":{"slug":"/products/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/products/instance","title":"Instances"}}},{"node":{"fields":{"slug":"/products/graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/products/arcql","title":"ArcQL Filtering"}}},{"node":{"fields":{"slug":"/products/realtime","title":"Realtime"}}},{"node":{"fields":{"slug":"/products/authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/products/instance/crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/products/instance/monitoring","title":"Logs"}}},{"node":{"fields":{"slug":"/products/instance/logs","title":"Monitoring"}}},{"node":{"fields":{"slug":"/products/instance/custom-functions","title":"Custom Functions"}}},{"node":{"fields":{"slug":"/products/authorisation/permissions","title":"Permissions"}}},{"node":{"fields":{"slug":"/products/authorisation/policies","title":"Policies"}}},{"node":{"fields":{"slug":"/products/graphql/intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/products/graphql/query","title":"Queries"}}},{"node":{"fields":{"slug":"/products/graphql/mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/products/graphql/subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/products/graphql/hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/products/graphql/directives","title":"Directives"}}},{"node":{"fields":{"slug":"/products/graphql/interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/products","title":"Products"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction to Hypi"}}},{"node":{"fields":{"slug":"/products/axiom/crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/products/axiom","title":"Axiom"}}},{"node":{"fields":{"slug":"/products/axiom/app-dependencies","title":"App Dependencies"}}},{"node":{"fields":{"slug":"/products/axiom/environment-variables","title":"Environment Variables"}}},{"node":{"fields":{"slug":"/products/axiom/workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/products/axiom/webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/products/axiom/triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/products/axiom/user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/products/axiom/serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/products/axiom/permission-and-authorisation","title":"Permission and Authorisation"}}},{"node":{"fields":{"slug":"/products copy","title":"Products"}}},{"node":{"fields":{"slug":"/products copy/instance","title":"Instances"}}},{"node":{"fields":{"slug":"/products copy/arcql","title":"ArcQL Filtering"}}},{"node":{"fields":{"slug":"/products copy/axiom","title":"Axiom"}}},{"node":{"fields":{"slug":"/products copy/graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/products copy/realtime","title":"Realtime"}}},{"node":{"fields":{"slug":"/products copy/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/products copy/instance/monitoring","title":"Logs"}}},{"node":{"fields":{"slug":"/products copy/instance/crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/products copy/instance/custom-functions","title":"Custom Functions"}}},{"node":{"fields":{"slug":"/products copy/instance/logs","title":"Monitoring"}}},{"node":{"fields":{"slug":"/products copy/axiom/user-defined-functions","title":"User Defined Functions"}}},{"node":{"fields":{"slug":"/products copy/axiom/app-dependencies","title":"App Dependencies"}}},{"node":{"fields":{"slug":"/products copy/axiom/workflow","title":"Workflows"}}},{"node":{"fields":{"slug":"/products copy/axiom/crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/products copy/authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/products copy/axiom/environment-variables","title":"Environment Variables"}}},{"node":{"fields":{"slug":"/products copy/axiom/triggers","title":"Triggers"}}},{"node":{"fields":{"slug":"/products copy/axiom/serverless-functions","title":"Serverless functions"}}},{"node":{"fields":{"slug":"/products copy/axiom/permission-and-authorisation","title":"Permission and Authorisation"}}},{"node":{"fields":{"slug":"/products copy/axiom/webhooks","title":"Webhooks"}}},{"node":{"fields":{"slug":"/products copy/authorisation/policies","title":"Policies"}}},{"node":{"fields":{"slug":"/products copy/graphql/query","title":"Queries"}}},{"node":{"fields":{"slug":"/products copy/graphql/intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/products copy/authorisation/permissions","title":"Permissions"}}},{"node":{"fields":{"slug":"/products copy/graphql/hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/products copy/graphql/directives","title":"Directives"}}},{"node":{"fields":{"slug":"/products copy/graphql/mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/products copy/graphql/interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/products copy/graphql/subscription","title":"Subscriptions"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"88b97edd-3989-5e92-97c4-c80070748490"}}}