{"componentChunkName":"component---src-templates-docs-js","path":"/reference/01-graphql/03-mutation","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"67bda306-ad9d-528b-8889-0548a66b45bb","title":"Mutations","slug":"/reference/01-graphql/03-mutation"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Mutations\",\n  \"metaTitle\": \"Hypi tutorial introducing GraphQL\",\n  \"metaDescription\": \"Introduction to on the Hypi platform\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"As a complete platform we focus on the full cycle of data fetching, but a ways to modify  each app's release data. Similar to queries, mutations field returns an object type, you can ask for any nested fields. Which, are useful for fetching the new state of an object after an update.\"), mdx(\"h2\", null, \"Form a mutation\"), mdx(\"p\", null, \"You must specify three things when defining a mutation:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1.\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Name of the mutation\"), \", traditionally name after the type of modification you want to perform.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2.\"), \" The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Input object\"), \". This should be pass as an argument to the mutation name as the data you want ot send to the server, composed of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"input fields\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3.\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Payload object\"), \", The data you want to return from the server, composed of return fields. Pass it as the body of the mutation name.\"), mdx(\"div\", {\n    className: \"code-container\"\n  }, mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  mutation CreateTodo( $todos: [TodoInput!]!) {\\n       createTodo(todo: $todo) {\\n          hypi {\\n            id\\n            created\\n           }\\n         description\\n         completed\\n       }\\n     }\\n     \\n    # Variables\\n   {\\n     \\\"todo\\\": [ {\\n       \\\"description\\\": \\\"This is a great todo!\\\"\\n        \\\"completed\\\":\\\"false\\\",\\n\\n     }  ]\\n   }\\n\"))), mdx(\"div\", {\n    className: \"code-column\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n      \\\"data\\\": {\\n        \\\"createTodo\\\": [{\\n        \\\"hypi\\\": {\\n               \\\"id\\\": \\\"c94144ec-52aa-4337-9d8b-15fa8ec5c979\\\"\\n               \\\"created\\\": \\\"2019-11-02T15:45:16Z\\\"\\n           }\\n         description\\\": \\\"This is a great todo!\\\"\\n         \\\"completed\\\":\\\"false\\\",\\n        }]\\n      }\\n    }\\n     \\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#introduction","title":"Introduction"},{"url":"#form-a-mutation","title":"Form a mutation"}]},"parent":{"__typename":"File","relativePath":"reference/01-graphql/03-mutation.md"},"frontmatter":{"metaTitle":"Hypi tutorial introducing GraphQL","metaDescription":"Introduction to on the Hypi platform"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/introduction","title":"Introduction to Hypi"}}},{"node":{"fields":{"slug":"/FAQs","title":"FAQs"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/","title":"Hypi Platform Documentation"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/tutorials/01-registration-and-login","title":"Registration & Login"}}},{"node":{"fields":{"slug":"/tutorials/02-creating-apps","title":"Creating an app"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/reference/00-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/reference/01-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/reference/02-arcql","title":"ArcQL Filtering"}}},{"node":{"fields":{"slug":"/reference/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/reference/05-realtime","title":"Realtime"}}},{"node":{"fields":{"slug":"/recipes/01-login","title":"Logging into a Hypi app"}}},{"node":{"fields":{"slug":"/recipes/02-create-account","title":"Create an account"}}},{"node":{"fields":{"slug":"/recipes/03-build-todo-app","title":"Build a todo app"}}},{"node":{"fields":{"slug":"/reference/04-instance/01-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/reference/04-instance/04-monitoring","title":"Logs"}}},{"node":{"fields":{"slug":"/reference/04-instance/02-custom-functions","title":"Custom Functions"}}},{"node":{"fields":{"slug":"/reference/04-instance/05-logs","title":"Monitoring"}}},{"node":{"fields":{"slug":"/reference/01-graphql/02-query","title":"Queries"}}},{"node":{"fields":{"slug":"/reference/01-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/01-graphql/03-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/reference/01-graphql/04-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/reference/01-graphql/05-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/reference/01-graphql/06-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/reference/01-graphql/07-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/reference/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference/04-authorisation/01-permissions","title":"Permissions"}}},{"node":{"fields":{"slug":"/reference/04-authorisation/01-policies","title":"Policies"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"67bda306-ad9d-528b-8889-0548a66b45bb"}}}