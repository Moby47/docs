{"componentChunkName":"component---src-templates-docs-js","path":"/reference/02-graphql/06-directives","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"faf855dd-4707-5344-a584-3200004c73e7","title":"Directives","slug":"/reference/02-graphql/06-directives"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Directives\",\n  \"metaTitle\": \"Hypi tutorial introducing GraphQL Directives\",\n  \"metaDescription\": \"Introduction to GraphQL directives on the Hypi platform\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \" We discussed above how variables enable us to avoid doing manual string interpolation to construct dynamic queries. Passing variables in arguments solves a pretty big class of these problems, but we might also need a way to dynamically change the structure and shape of our queries using variables. \"), mdx(\"h2\", null, \"So, what is a directive\"), mdx(\"p\", null, \"A directive is an identifier preceded by a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@\"), \" character, optionally followed by a list of named arguments, which can appear after almost any form of syntax in the GraphQL query or schema languages. \"), mdx(\"p\", null, \"  For example, we can imagine a UI component that has a summarized and detailed view, where one includes more fields than the other.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"   query Hero($episode: Episode, $withFriends: Boolean!) {\\n     hero(episode: $episode) {\\n       name\\n       friends @include(if: $withFriends) {\\n         name\\n       }\\n     }\\n   }\\n\\n    #Variables\\n  \\n   {\\n     \\\"episode\\\": \\\"JEDI\\\",\\n     \\\"withFriends\\\": false\\n   }\\n\")), mdx(\"br\", null), mdx(\"h2\", null, \"Built in directives\"), mdx(\"h3\", null, \"@http\"), mdx(\"h3\", null, \"@tan\"), mdx(\"h3\", null, \"@api\"), mdx(\"h3\", null, \"@secret\"), mdx(\"h3\", null, \"@field\"), mdx(\"h3\", null, \"@length\"), mdx(\"h3\", null, \"@notNull\"), mdx(\"h3\", null, \"@notEmpty\"), mdx(\"h3\", null, \"@past\"), mdx(\"h3\", null, \"@future\"), mdx(\"h3\", null, \"@pattern\"), mdx(\"h3\", null, \"@email\"), mdx(\"h3\", null, \"@unique\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#introduction","title":"Introduction"},{"url":"#so-what-is-a-directive","title":"So, what is a directive"},{"url":"#built-in-directives","title":"Built in directives","items":[{"url":"#http","title":"@http"},{"url":"#tan","title":"@tan"},{"url":"#api","title":"@api"},{"url":"#secret","title":"@secret"},{"url":"#field","title":"@field"},{"url":"#length","title":"@length"},{"url":"#notnull","title":"@notNull"},{"url":"#notempty","title":"@notEmpty"},{"url":"#past","title":"@past"},{"url":"#future","title":"@future"},{"url":"#pattern","title":"@pattern"},{"url":"#email","title":"@email"},{"url":"#unique","title":"@unique"}]}]},"parent":{"__typename":"File","relativePath":"reference/02-graphql/06-directives.md"},"frontmatter":{"metaTitle":"Hypi tutorial introducing GraphQL Directives","metaDescription":"Introduction to GraphQL directives on the Hypi platform"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/","title":"Hypi Platform Documentation"}}},{"node":{"fields":{"slug":"/recipes/01-login","title":"Logging into a Hypi app"}}},{"node":{"fields":{"slug":"/recipes/03-build-todo-app","title":"Build a todo app"}}},{"node":{"fields":{"slug":"/recipes/02-create-account","title":"Create an account"}}},{"node":{"fields":{"slug":"/reference/02-graphql/05-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/reference/02-graphql/07-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/reference/04-authorisation/01-permissions","title":"Permissions"}}},{"node":{"fields":{"slug":"/reference/04-authorisation/01-policies","title":"Policies"}}},{"node":{"fields":{"slug":"/reference/04-instance/01-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/reference/04-instance/02-custom-functions","title":"Custom Functions"}}},{"node":{"fields":{"slug":"/reference/04-instance/04-monitoring","title":"Logs"}}},{"node":{"fields":{"slug":"/reference/04-instance/05-logs","title":"Monitoring"}}},{"node":{"fields":{"slug":"/reference/02-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/02-graphql/02-query","title":"Queries"}}},{"node":{"fields":{"slug":"/reference/02-graphql/03-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/reference/02-graphql/04-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/reference/02-graphql/06-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/FAQs","title":"FAQs"}}},{"node":{"fields":{"slug":"/tutorials/01-registration-and-login","title":"Registration & Login"}}},{"node":{"fields":{"slug":"/tutorials/02-creating-apps","title":"Creating an app"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction to Hypi"}}},{"node":{"fields":{"slug":"/reference/00-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/reference/01-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/reference/02-arcql","title":"ArcQL Filtering"}}},{"node":{"fields":{"slug":"/reference/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/reference/05-realtime","title":"Realtime"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"faf855dd-4707-5344-a584-3200004c73e7"}}}