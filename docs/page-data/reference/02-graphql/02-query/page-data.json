{"componentChunkName":"component---src-templates-docs-js","path":"/reference/02-graphql/02-query","result":{"data":{"site":{"siteMetadata":{"title":"Hypi Documentation","docsLocation":"https://github.com/hypi-universe/docs/tree/master/content"}},"mdx":{"fields":{"id":"ca7d018d-dce6-5ca8-b52f-28a4a0456764","title":"Queries","slug":"/reference/02-graphql/02-query"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Queries\",\n  \"metaTitle\": \"Hypi tutorial introducing GraphQL.\",\n  \"metaDescription\": \"Introduction to GraphQL on the Hypi platform.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"Every GraphQL schema has a root type for both queries and mutations. The query type defines GraphQL operations that retrieve data from the server.\"), mdx(\"p\", null, \"GraphQL queries return only the data you define. To construct a query, you must identify fields within fields ( known as nested subfields) continuously, until you return only scalars.\"), mdx(\"h2\", null, \"GraphQL API\"), mdx(\"p\", null, \"The GraphQL API has a single endpoint: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.hypi.app/graphql\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"You should construct queries like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"query getMyTodos {\\n  todos(where: { is_public: { _eq: false} }, order_by: { created_at: desc }) {\\n    id\\n    title\\n    created_at\\n    is_completed\\n  }\\n}\\n\")), mdx(\"h2\", null, \"Authorization\"), mdx(\"p\", null, \"Note: You need to pass the Authorization: Auth \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \" header before querying to get the results. Example of setting up your header with auth token.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n  \\\"url\\\": \\\"https://api.hypi.app/graphql/\\\",\\n  \\\"headers\\\": {\\n     \\\"Authorization\\\":\\\"Auth Token here. It can be copied from the Developer Hub\\\",\\n     \\\"hypi-domain\\\": \\\"my-domain.com\\\"\\n  }\\n},\\n\")), mdx(\"h2\", null, \"Query Variables\"), mdx(\"p\", null, \"GraphQL Variables makes queries more dynamic and powerful, and they reduce complexity when passing mutation input objects.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"query($number_of_repos:Int!) {\\n  viewer {\\n    name\\n     repositories(last: $number_of_repos) {\\n       nodes {\\n         name\\n       }\\n     }\\n   }\\n}\\nvariables {\\n   \\\"number_of_repos\\\": 3\\n}\\n\")), mdx(\"p\", null, \"There are three steps to using variables:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create the variable outside the operation in a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"variables\"), \" object:\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The variable nneds to be pass to the operation as an argument:\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"query($limit:Int!){\"), \"  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use the variable within the operation:\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"repositories(limit: $limit) {\"))), mdx(\"p\", null, \"This process makes the query argument dynamic. You can  change the value in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variables\"), \" object and keep the foundation of the query the same.\"), mdx(\"p\", null, \"Using variables as arguments lets you dynamically update values in the variables object without changing the query.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#introduction","title":"Introduction"},{"url":"#graphql-api","title":"GraphQL API"},{"url":"#authorization","title":"Authorization"},{"url":"#query-variables","title":"Query Variables"}]},"parent":{"__typename":"File","relativePath":"reference/02-graphql/02-query.md"},"frontmatter":{"metaTitle":"Hypi tutorial introducing GraphQL.","metaDescription":"Introduction to GraphQL on the Hypi platform."}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/recipes","title":"Recipes"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/","title":"Hypi Platform Documentation"}}},{"node":{"fields":{"slug":"/recipes/01-login","title":"Logging into a Hypi app"}}},{"node":{"fields":{"slug":"/recipes/03-build-todo-app","title":"Build a todo app"}}},{"node":{"fields":{"slug":"/recipes/02-create-account","title":"Create an account"}}},{"node":{"fields":{"slug":"/reference/02-graphql/05-hypi-object","title":"Magic Hypi Object"}}},{"node":{"fields":{"slug":"/reference/02-graphql/07-interfaces","title":"Interfaces"}}},{"node":{"fields":{"slug":"/reference/04-authorisation/01-permissions","title":"Permissions"}}},{"node":{"fields":{"slug":"/reference/04-authorisation/01-policies","title":"Policies"}}},{"node":{"fields":{"slug":"/reference/04-instance/01-crud","title":"CRUD"}}},{"node":{"fields":{"slug":"/reference/04-instance/02-custom-functions","title":"Custom Functions"}}},{"node":{"fields":{"slug":"/reference/04-instance/04-monitoring","title":"Logs"}}},{"node":{"fields":{"slug":"/reference/04-instance/05-logs","title":"Monitoring"}}},{"node":{"fields":{"slug":"/reference/02-graphql/01-intro","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/02-graphql/02-query","title":"Queries"}}},{"node":{"fields":{"slug":"/reference/02-graphql/03-mutation","title":"Mutations"}}},{"node":{"fields":{"slug":"/reference/02-graphql/04-subscription","title":"Subscriptions"}}},{"node":{"fields":{"slug":"/reference/02-graphql/06-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/FAQs","title":"FAQs"}}},{"node":{"fields":{"slug":"/tutorials/01-registration-and-login","title":"Registration & Login"}}},{"node":{"fields":{"slug":"/tutorials/02-creating-apps","title":"Creating an app"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction to Hypi"}}},{"node":{"fields":{"slug":"/reference/00-instance","title":"Instances"}}},{"node":{"fields":{"slug":"/reference/01-graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/reference/02-arcql","title":"ArcQL Filtering"}}},{"node":{"fields":{"slug":"/reference/03-authorisation","title":"Authorisation"}}},{"node":{"fields":{"slug":"/reference/04-graph","title":"Graph Queries"}}},{"node":{"fields":{"slug":"/reference/05-realtime","title":"Realtime"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"ca7d018d-dce6-5ca8-b52f-28a4a0456764"}}}